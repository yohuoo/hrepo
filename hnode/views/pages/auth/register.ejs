<div class="auth-card">
  <div class="logo">
    <i class="bi bi-diagram-3 fs-1 text-primary"></i>
    <h2>CRM系统</h2>
    <p class="text-muted">创建您的账户</p>
  </div>
  
  <form id="registerForm">
    <div class="mb-3">
      <label for="username" class="form-label">用户名</label>
      <input type="text" class="form-control" id="username" name="username" required>
      <small class="text-muted">用户名将用于登录</small>
    </div>
    
    <div class="mb-3">
      <label for="email" class="form-label">邮箱</label>
      <input type="email" class="form-control" id="email" name="email" required>
    </div>
    
    <div class="mb-3">
      <label for="password" class="form-label">密码</label>
      <input type="password" class="form-control" id="password" name="password" required minlength="6">
      <small class="text-muted">密码至少6位</small>
    </div>
    
    <div class="mb-3">
      <label for="confirmPassword" class="form-label">确认密码</label>
      <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
    </div>
    
    <button type="submit" class="btn btn-primary w-100 mb-3">
      <i class="bi bi-person-plus"></i> 注册
    </button>
    
    <div class="text-center">
      <span class="text-muted">已有账号？</span>
      <a href="/login">立即登录</a>
    </div>
  </form>
</div>

<script>
$(document).ready(function() {
  $('#registerForm').on('submit', async function(e) {
    e.preventDefault();
    
    const username = $('#username').val();
    const email = $('#email').val();
    const password = $('#password').val();
    const confirmPassword = $('#confirmPassword').val();
    
    if (password !== confirmPassword) {
      showToast('两次密码输入不一致', 'warning');
      return;
    }
    
    if (password.length < 6) {
      showToast('密码长度至少为6位', 'warning');
      return;
    }
    
    showLoading();
    
    try {
      await register(username, email, password);
    } finally {
      hideLoading();
    }
  });
});

// ==================== 加载和提示函数 ====================

function showLoading() {
  // 先移除可能存在的旧遮罩
  hideLoading();
  
  console.log('🔄 显示加载中...');
  const loadingHTML = `
    <div class="loading-overlay" id="loadingOverlay" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 9999;">
      <div class="spinner-border text-light" role="status" style="width: 3rem; height: 3rem;">
        <span class="visually-hidden">加载中...</span>
      </div>
    </div>
  `;
  document.body.insertAdjacentHTML('beforeend', loadingHTML);
}

function hideLoading() {
  console.log('✅ 隐藏加载中');
  const loading = document.getElementById('loadingOverlay');
  if (loading) {
    loading.remove();
  }
}

function showSuccess(message) {
  showToast(message, 'success');
}

function showError(message) {
  showToast(message, 'error');
}

function showWarning(message) {
  showToast(message, 'warning');
}

function showInfo(message) {
  showToast(message, 'info');
}

function showToast(message, type = 'info') {
  const toastContainer = document.getElementById('toastContainer') || document.body;
  const toast = document.createElement('div');
  toast.className = `alert alert-${type === 'success' ? 'success' : type === 'error' ? 'danger' : type === 'warning' ? 'warning' : 'info'} position-fixed`;
  toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);';
  toast.innerHTML = `
    <div class="d-flex align-items-center">
      <i class="bi ${type === 'success' ? 'bi-check-circle' : type === 'error' ? 'bi-x-circle' : type === 'warning' ? 'bi-exclamation-triangle' : 'bi-info-circle'} me-2"></i>
      <span>${message}</span>
    </div>
  `;
  
  toastContainer.appendChild(toast);
  
  setTimeout(() => {
    toast.style.opacity = '0';
    toast.style.transition = 'opacity 0.5s';
    setTimeout(() => toast.remove(), 500);
  }, 3000);
}
</script>
